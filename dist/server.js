"use strict";var z=Object.create;var I=Object.defineProperty;var $=Object.getOwnPropertyDescriptor;var H=Object.getOwnPropertyNames;var J=Object.getPrototypeOf,K=Object.prototype.hasOwnProperty;var W=(r,e,o,n)=>{if(e&&typeof e=="object"||typeof e=="function")for(let t of H(e))!K.call(r,t)&&t!==o&&I(r,t,{get:()=>e[t],enumerable:!(n=$(e,t))||n.enumerable});return r};var m=(r,e,o)=>(o=r!=null?z(J(r)):{},W(e||!r||!r.__esModule?I(o,"default",{value:r,enumerable:!0}):o,r));var T=m(require("express")),G=m(require("cors"));var f=m(require("firebase-admin")),R=()=>{f.apps.length===0&&f.initializeApp({credential:f.credential.cert({clientEmail:process.env.FIREBASE_CLIENT_EMAIL,privateKey:process.env.FIREBASE_PRIVATE_KEY?.replace(/\\n/g,`
`),projectId:process.env.FIREBASE_PROJECT_ID})})};var Ae=require("dotenv/config");var V=m(require("express"));var O=m(require("express"));function Y(){return{verifyToken:async e=>{try{let o=await f.auth().verifyIdToken(e);return{uid:o.uid,email:o.email,iat:o.iat,exp:o.exp}}catch(o){throw console.error("Token inv\xE1lido:",o),new Error("Token inv\xE1lido.")}}}}var M=Y;var b=O.default.Router(),{verifyToken:Q}=M();b.get("/",async(r,e)=>{let o=r.headers.authorization;if(!o){e.status(401).json({success:!1,error:"Token n\xE3o fornecido."});return}try{let n=o.split("Bearer ")[1],t=await Q(n);e.status(200).json({success:!0,user:t})}catch(n){console.error("Token inv\xE1lido:",n),e.status(401).json({success:!1,error:"Token inv\xE1lido ou expirado."});return}});var A=b;var x=m(require("express"));var E=m(require("mongoose"));var D=m(require("mongoose")),X=async(r,e)=>{try{D.default.connection.readyState===0?(console.log("Conectando ao MongoDB..."),await D.default.connect(r,{dbName:e}),console.log(`Conectado ao MongoDB na base de dados "${e}"`)):D.default.connection.readyState===1?console.log("J\xE1 conectado ao MongoDB"):D.default.connection.readyState===2?console.log("Conex\xE3o com MongoDB est\xE1 em progresso..."):D.default.connection.readyState===3&&console.log("Desconectando do MongoDB...")}catch(o){throw console.error("Erro ao se conectar ao banco de dados:",o),new Error("Falha ao se conectar ao banco de dados")}},_=X;var l={INVALID_ID:"ID inv\xE1lido.",DOCUMENT_NOT_FOUND:"Documento n\xE3o encontrado.",CREATE_ERROR:"Erro ao criar documento.",UPDATE_ERROR:"Erro ao atualizar documento.",DELETE_ERROR:"Erro ao excluir documento.",LIST_ERROR:"Erro ao listar documentos."};async function Z(r,e,o){let n=process.env.MONGODB_URL;if(!n)throw new Error("Vari\xE1vel de ambiente MONGODB_URL n\xE3o encontrada.");await _(n,r);let t=async s=>{try{return E.default.models[e]||E.default.model(e,new E.Schema(s),o)}catch(i){throw console.error("Erro ao validar o modelo",i.message),new Error("Falha ao validar o modelo")}},c=s=>E.default.Types.ObjectId.isValid(s),a=(s,i)=>{throw console.error(`Erro ao executar opera\xE7\xE3o: ${s}`,i.message),new Error(s)};return{createDocument:async(s,i)=>{try{let d=await t(s);return await new d(i).save()}catch(d){return a(l.CREATE_ERROR,d),null}},getAllDocument:async()=>{try{return await(await t()).find()}catch(s){a(l.LIST_ERROR,s)}},getDocumentById:async s=>{if(!c(s))throw new Error(l.INVALID_ID);try{let d=await(await t()).findById(s);if(!d)throw new Error(l.DOCUMENT_NOT_FOUND);return d}catch(i){return a(l.DOCUMENT_NOT_FOUND,i),null}},updateDocumentById:async(s,i)=>{if(!c(s))throw new Error(l.INVALID_ID);try{let N=await(await t()).findByIdAndUpdate(s,i,{new:!0});if(!N)throw new Error(l.DOCUMENT_NOT_FOUND);return N}catch(d){a(l.UPDATE_ERROR,d)}},deleteDocumentById:async s=>{if(!c(s))throw new Error(l.INVALID_ID);try{let d=await(await t()).findByIdAndDelete(s);if(!d)throw new Error(l.DOCUMENT_NOT_FOUND);return{id:d._id.toString(),success:!0}}catch(i){a(l.DELETE_ERROR,i)}}}}var p=Z;var v=x.default.Router();v.post("/",async(r,e)=>{let{collectionName:o,schema:n,dbName:t,data:c,nameModel:a}=r.body;if(!n||!c||!t||!a){e.status(400).json({success:!1,error:"Par\xE2metros inv\xE1lidos. Envie schema, data, dbName, nameModel, collectionName (OPCIONAL)"});return}try{let{createDocument:u}=await p(t,a,o),h=await u(n,c);e.json({success:!0,data:h})}catch(u){console.error(u),e.status(500).json({success:!1,error:"Erro ao adicionar documento."})}});var B=v;var S=m(require("express"));var w=S.default.Router();w.get("/all",async(r,e)=>{let{collectionName:o,dbName:n,nameModel:t}=r.query;if(!n||!t||!o){e.status(400).json({success:!1,error:"Algumas dessas informa\xE7\xF5es n\xE3o foram fornecidas: dbName, nameModel e collectionName."});return}try{let{getAllDocument:c}=await p(n,t,o),a=await c();e.json({success:!0,data:a})}catch(c){e.status(500).json({success:!1,error:c.message})}});w.get("/",async(r,e)=>{let{collectionName:o,dbName:n,id:t,nameModel:c}=r.query;if(!n||!t||!o||!c){e.status(400).json({success:!1,error:"Algumas dessas informa\xE7\xF5es n\xE3o foram fornecidas: dbName, id, nameModel e collectionName."});return}try{let{getDocumentById:a}=await p(n,c,o),u=await a(t);e.json({success:!0,data:u})}catch(a){e.status(500).json({success:!1,error:a.message})}});var j=w;var U=m(require("express"));var L=U.default.Router();L.delete("/",async(r,e)=>{let{collectionName:o,dbName:n,id:t,nameModel:c}=r.query;if(!t||!o||!o||!n){e.status(400).json({success:!1,error:"Algumas dessas informa\xE7\xF5es n\xE3o foram fornecidas: id, nameModel, collectionName, dbName."});return}try{let{deleteDocumentById:a}=await p(n,c,o),u=await a(t);e.status(200).json(u)}catch(a){e.status(500).json({success:!1,error:a.message})}});var P=L;var C=m(require("express")),F=C.default.Router();F.put("/",async(r,e)=>{let o=r.query,{dbName:n,nameModel:t,schema:c,collectionName:a,data:u}=r.body;if(!n||!t||!c||!a||!u){e.status(400).json({success:!1,error:"Algumas dessas informa\xE7\xF5es n\xE3o foram fornecidas: dbName, nameModel, schema, collectionName, data"});return}});var k=F;var g=V.default.Router();g.get("/",(r,e)=>{e.send("API Sequoia")});g.use("/api/verify-token",A);g.use("/api/mongodb/add",B);g.use("/api/mongodb/get",j);g.use("/api/mongodb/delete",P);g.use("/api/mongodb/update",k);var q=g;var y=(0,T.default)();y.use((0,G.default)({origin:process.env.ALLOWED_ORIGINS,credentials:!0,methods:["GET","POST","PUT","DELETE","OPTIONS"],allowedHeaders:["Content-Type","Authorization"]}));y.use(T.default.json());R();y.use("/",q);y.listen(process.env.PORT,()=>{console.log(`API rodando na porta ${process.env.PORT}`)});
