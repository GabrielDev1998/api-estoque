"use strict";var b=Object.create;var w=Object.defineProperty;var F=Object.getOwnPropertyDescriptor;var C=Object.getOwnPropertyNames;var S=Object.getPrototypeOf,P=Object.prototype.hasOwnProperty;var j=(r,o,e,a)=>{if(o&&typeof o=="object"||typeof o=="function")for(let n of C(o))!P.call(r,n)&&n!==e&&w(r,n,{get:()=>o[n],enumerable:!(a=F(o,n))||a.enumerable});return r};var l=(r,o,e)=>(e=r!=null?b(S(r)):{},j(o||!r||!r.__esModule?w(e,"default",{value:r,enumerable:!0}):e,r));var y=l(require("express")),k=l(require("cors"));var m=l(require("firebase-admin")),I=()=>{m.apps.length===0&&m.initializeApp({credential:m.credential.cert({clientEmail:process.env.FIREBASE_CLIENT_EMAIL,privateKey:process.env.FIREBASE_PRIVATE_KEY?.replace(/\\n/g,`
`),projectId:process.env.FIREBASE_PROJECT_ID})})};var po=require("dotenv/config");var U=l(require("express"));var O=l(require("express"));function V(){return{verifyToken:async o=>{try{let e=await m.auth().verifyIdToken(o);return{uid:e.uid,email:e.email,iat:e.iat,exp:e.exp}}catch(e){throw console.error("Token inv\xE1lido:",e),new Error("Token inv\xE1lido.")}}}}var p=V;var h=O.default.Router(),{verifyToken:z}=p();h.get("/",async(r,o)=>{let e=r.headers.authorization;if(!e){o.status(401).json({success:!1,error:"Token n\xE3o fornecido."});return}try{let a=e.split("Bearer ")[1],n=await z(a);o.status(200).json({success:!0,user:n})}catch(a){console.error("Token inv\xE1lido:",a),o.status(401).json({success:!1,error:"Token inv\xE1lido ou expirado."});return}});var _=h;var M=l(require("express"));var f=l(require("mongoose"));var E=l(require("mongoose")),q=async(r,o)=>{try{E.default.connection.readyState===0?(console.log("Conectando ao MongoDB..."),await E.default.connect(r,{dbName:o}),console.log(`Conectado ao MongoDB na base de dados "${o}"`)):E.default.connection.readyState===1?console.log("J\xE1 conectado ao MongoDB"):E.default.connection.readyState===2?console.log("Conex\xE3o com MongoDB est\xE1 em progresso..."):E.default.connection.readyState===3&&console.log("Desconectando do MongoDB...")}catch(e){throw console.error("Erro ao se conectar ao banco de dados:",e),new Error("Falha ao se conectar ao banco de dados")}},N=q;var s={INVALID_ID:"ID inv\xE1lido.",DOCUMENT_NOT_FOUND:"Documento n\xE3o encontrado.",CREATE_ERROR:"Erro ao criar documento.",UPDATE_ERROR:"Erro ao atualizar documento.",DELETE_ERROR:"Erro ao excluir documento.",LIST_ERROR:"Erro ao listar documentos."};async function G(r,o,e){let a=process.env.MONGODB_URL;if(!a)throw new Error("Vari\xE1vel de ambiente MONGODB_URL n\xE3o encontrada.");await N(a,r);let n=async()=>{try{return f.default.models[o]||f.default.model(o,new f.Schema({},{strict:!1}),e)}catch(t){throw console.error("Erro ao validar o modelo",t.message),new Error("Falha ao validar o modelo")}},i=t=>f.default.Types.ObjectId.isValid(t),d=(t,c)=>{throw console.error(`Erro ao executar opera\xE7\xE3o: ${t}`,c.message),new Error(t)};return{createDocument:async t=>{try{let c=await n();return{success:!0,data:await new c(t).save()}}catch(c){return d(s.CREATE_ERROR,c),{success:!1,error:s.CREATE_ERROR}}},getAllDocument:async()=>{try{return{success:!0,data:await(await n()).find()}}catch(t){return d(s.LIST_ERROR,t),{success:!1,error:s.LIST_ERROR}}},getDocumentById:async t=>{if(!i(t))throw new Error(s.INVALID_ID);try{let u=await(await n()).findById(t);if(!u)throw new Error(s.DOCUMENT_NOT_FOUND);return{success:!0,data:u}}catch(c){return d(s.DOCUMENT_NOT_FOUND,c),{success:!1,error:s.DOCUMENT_NOT_FOUND}}},updateDocumentById:async(t,c)=>{if(!i(t))throw new Error(s.INVALID_ID);try{let T=await(await n()).findByIdAndUpdate(t,c,{new:!0});if(!T)throw new Error(s.DOCUMENT_NOT_FOUND);return{success:!0,data:T}}catch(u){return d(s.UPDATE_ERROR,u),{success:!1,error:s.UPDATE_ERROR}}},deleteDocumentById:async t=>{if(!i(t))throw new Error(s.INVALID_ID);try{let u=await(await n()).findByIdAndDelete(t);if(!u)throw new Error(s.DOCUMENT_NOT_FOUND);return{success:!0,data:u}}catch(c){return d(s.DELETE_ERROR,c),{success:!1,error:s.DELETE_ERROR}}}}}var v=G;var A=M.default.Router();A.post("/",async(r,o)=>{let{collectionName:e,dbName:a,data:n,nameModel:i}=r.body;if(!a||!i||!n||!e){o.status(400).json({success:!1,error:"Verifique se todos os campos foram informados. (dbName, data, nameModel, collectionName)"});return}try{let{createDocument:d}=await v(a,i,e),g=await d(n);o.status(200).json(g)}catch(d){console.error(d),o.status(500).json({success:!1,error:d.message})}});var B=A;var x=async(r,o,e)=>{let n=r.headers.authorization?.split(" ")[1];if(!n){o.status(401).json({success:!1,error:"Token n\xE3o fornecido"});return}try{let{verifyToken:i}=p();await i(n),e()}catch(i){console.error(i),o.status(401).json({valid:!1,error:"Token inv\xE1lido ou expirado"});return}};var D=U.default.Router();D.get("/",async(r,o)=>{o.send("API Sequoia")});D.use("/api/verify-token",_);D.use("/api/mongodb/add",x,B);var L=D;var R=(0,y.default)();R.use((0,k.default)({origin:process.env.ALLOWED_ORIGINS,credentials:!0,methods:["GET","POST","PUT","DELETE","OPTIONS"],allowedHeaders:["Content-Type","Authorization"]}));R.use(y.default.json());I();R.use("/",L);R.listen(process.env.PORT,()=>{console.log(`API rodando na porta ${process.env.PORT}`)});
