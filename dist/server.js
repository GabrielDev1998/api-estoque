"use strict";var K=Object.create;var v=Object.defineProperty;var J=Object.getOwnPropertyDescriptor;var W=Object.getOwnPropertyNames;var Y=Object.getPrototypeOf,$=Object.prototype.hasOwnProperty;var Q=(t,e,o,s)=>{if(e&&typeof e=="object"||typeof e=="function")for(let r of W(e))!$.call(t,r)&&r!==o&&v(t,r,{get:()=>e[r],enumerable:!(s=J(e,r))||s.enumerable});return t};var m=(t,e,o)=>(o=t!=null?K(Y(t)):{},Q(e||!t||!t.__esModule?v(o,"default",{value:t,enumerable:!0}):o,t));var b=m(require("express")),V=m(require("cors"));var p=m(require("firebase-admin")),T=()=>{p.apps.length===0&&p.initializeApp({credential:p.credential.cert({clientEmail:process.env.FIREBASE_CLIENT_EMAIL,privateKey:process.env.FIREBASE_PRIVATE_KEY?.replace(/\\n/g,`
`),projectId:process.env.FIREBASE_PROJECT_ID})})};var xe=require("dotenv/config");var z=m(require("express"));var j=m(require("express"));function X(){return{verifyToken:async e=>{try{let o=await p.auth().verifyIdToken(e);return{uid:o.uid,email:o.email,iat:o.iat,exp:o.exp}}catch(o){throw console.error("Token inv\xE1lido:",o),new Error("Token inv\xE1lido.")}}}}var A=X;var O=j.default.Router(),{verifyToken:Z}=A();O.get("/",async(t,e)=>{let o=t.headers.authorization;if(!o){e.status(401).json({success:!1,error:"Token n\xE3o fornecido."});return}try{let s=o.split("Bearer ")[1],r=await Z(s);e.status(200).json({success:!0,user:r})}catch(s){console.error("Token inv\xE1lido:",s),e.status(401).json({success:!1,error:"Token inv\xE1lido ou expirado."});return}});var x=O;var B=m(require("express"));var d=m(require("mongoose"));var w=m(require("mongoose")),ee=async(t,e)=>{try{w.default.connection.readyState===0&&(await w.default.connect(t,{dbName:e}),console.log("Conectado ao MongoDB"))}catch(o){throw console.error("Erro ao se conectar ao banco de dados:",o),new Error("Falha ao se conectar ao banco de dados")}},M=ee;async function oe(t,e,o){let s=process.env.MONGODB_URL_PRODUCTION;await M(s,t);let r=i=>d.default.models[e]?d.default.models[e]:d.default.model(e,new d.Schema(i),o),a=i=>d.default.Types.ObjectId.isValid(i)?new d.default.Types.ObjectId(i):null,c=async i=>{try{return d.default.models[e]||d.default.model(e,new d.Schema(i),o)}catch(n){throw console.error("Erro ao validar o modelo",n.message),new Error("Falha ao validar o modelo")}};return{createDocument:async(i,n)=>{try{let g=r(i);return{success:!0,data:await new g(n).save()}}catch(g){throw console.error("Erro ao criar documento:",g.message),new Error("Algum erro ocorreu ao tentar adicionar.")}},deleteDocument:async i=>{try{let n=a(i);return n?await(await c()).findByIdAndDelete(n)?{success:!0,message:"Documento deletado com sucesso"}:{success:!1,message:"Documento n\xE3o encontrado."}:{success:!1,message:"ID inv\xE1lido."}}catch(n){throw console.error("Erro ao excluir documento:",n),new Error("Falha ao excluir documento")}},updateDocumentById:async(i,n,g)=>{try{let u=a(n);if(!u)return{success:!1,message:"ID inv\xE1lido."};let N=await(await c(i)).findByIdAndUpdate(u,g,{new:!0,runValidators:!0});return N?{success:!0,message:"Documento atualizado com sucesso.",data:N}:{success:!1,message:"Documento n\xE3o encontrado."}}catch(u){throw console.error("Erro ao atualizar o documento:",u.message),new Error("Falha ao atualizar documento")}},getAllDocuments:async()=>{try{return{success:!0,data:await(await c()).find()}}catch(i){throw console.error("Erro ao listar todos os documentos:",i.message),new Error("Falha ao listar todos os documentos")}},getDocumentById:async i=>{try{let n=a(i);if(!n)return{success:!1,message:"ID inv\xE1lido."};let u=await(await c()).findById(n);return u?{success:!0,data:u}:{success:!1,message:"Documento n\xE3o encontrado."}}catch(n){throw console.error("Erro ao listar o documento:",n.message),new Error("Falha ao listar o documento")}},Model:r}}var l=oe;var R=B.default.Router();R.post("/",async(t,e)=>{let{collectionName:o,schema:s,dbName:r,data:a,nameModel:c}=t.body;if(console.log(t.body),!s||!a||!r||!c){e.status(400).json({success:!1,error:"Par\xE2metros inv\xE1lidos. Envie schema, data, dbName, nameModel e collectionName (OPCIONAL)."});return}try{let{createDocument:f}=await l(r,c,o),D=await f(s,a);e.status(201).json(D)}catch{e.status(500).json({success:!1,error:"Ocorreu algum erro interno. Tente novamente mais tarde."});return}});var S=R;var P=m(require("express"));var I=P.default.Router();I.get("/all",async(t,e)=>{let{collectionName:o,dbName:s,nameModel:r}=t.query;if(!s||!r){e.status(400).json({success:!1,error:"Algumas dessas informa\xE7\xF5es n\xE3o foram fornecidas: dbName, nameModel, collectionName (OPCIONAL)."});return}try{let{getAllDocuments:a}=await l(s,r,o),c=await a();e.status(200).json(c)}catch{e.status(500).json({success:!1,error:"Ocorreu algum erro interno. Tente novamente mais tarde."});return}});I.get("/",async(t,e)=>{let{collectionName:o,dbName:s,id:r}=t.query;if(!s||!r){e.status(400).json({success:!1,error:"Algumas dessas informa\xE7\xF5es n\xE3o foram fornecidas: dbName, id, collectionName (OPCIONAL)"});return}try{let{getDocumentById:a}=await l(s,s,o),c=await a(r);e.status(200).json(c)}catch{e.status(500).json({success:!1,error:"Ocorreu algum erro interno. Tente novamente mais tarde."});return}});var F=I;var k=m(require("express"));var L=k.default.Router();L.delete("/",async(t,e)=>{let{collectionName:o,dbName:s,id:r,nameModel:a}=t.query;if(!r||!o||!o||!s){e.status(400).json({success:!1,error:"Algumas dessas informa\xE7\xF5es n\xE3o foram fornecidas: id, nameModel, collectionName, dbName."});return}try{let{deleteDocument:c}=await l(s,a,o),f=await c(r);e.status(200).json(f)}catch{e.status(500).json({success:!1,error:"Ocorreu algum erro interno. Tente novamente mais tarde."});return}});var _=L;var C=m(require("express"));var G=C.default.Router();G.put("/",async(t,e)=>{let o=t.query,{dbName:s,nameModel:r,schema:a,collectionName:c,data:f}=t.body;if(!s||!r||!a||!c||!f){e.status(400).json({success:!1,error:"Algumas dessas informa\xE7\xF5es n\xE3o foram fornecidas: dbName, nameModel, schema, collectionName, data"});return}try{let{updateDocumentById:D}=await l(s,r,c),E=await D(a,o.id,f);e.status(200).json(E)}catch{e.status(500).json({success:!1,error:"Ocorreu algum erro interno. Tente novamente mais tarde."});return}});var U=G;var y=z.default.Router();y.get("/",(t,e)=>{e.send("API Sequoia")});y.use("/api/verify-token",x);y.use("/api/mongodb/add",S);y.use("/api/mongodb/get",F);y.use("/api/mongodb/delete",_);y.use("/api/mongodb/update",U);var q=y;var h=(0,b.default)();h.use((0,V.default)({origin:process.env.ALLOWED_ORIGINS,credentials:!0,methods:["GET","POST","PUT","DELETE","OPTIONS"],allowedHeaders:["Content-Type","Authorization"]}));h.use(b.default.json());T();h.use("/",q);h.listen(process.env.PORT,()=>{console.log(`API rodando na porta ${process.env.PORT}`)});
