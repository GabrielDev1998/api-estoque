"use strict";var K=Object.create;var N=Object.defineProperty;var J=Object.getOwnPropertyDescriptor;var W=Object.getOwnPropertyNames;var Y=Object.getPrototypeOf,$=Object.prototype.hasOwnProperty;var Q=(t,e,o,s)=>{if(e&&typeof e=="object"||typeof e=="function")for(let r of W(e))!$.call(t,r)&&r!==o&&N(t,r,{get:()=>e[r],enumerable:!(s=J(e,r))||s.enumerable});return t};var m=(t,e,o)=>(o=t!=null?K(Y(t)):{},Q(e||!t||!t.__esModule?N(o,"default",{value:t,enumerable:!0}):o,t));var E=m(require("express")),V=m(require("cors"));var g=m(require("firebase-admin")),T=()=>{g.apps.length===0&&g.initializeApp({credential:g.credential.cert({clientEmail:process.env.FIREBASE_CLIENT_EMAIL,privateKey:process.env.FIREBASE_PRIVATE_KEY?.replace(/\\n/g,`
`),projectId:process.env.FIREBASE_PROJECT_ID})})};var Oe=require("dotenv/config");var q=m(require("express"));var A=m(require("express"));function X(){return{verifyToken:async e=>{try{let o=await g.auth().verifyIdToken(e);return{uid:o.uid,email:o.email,iat:o.iat,exp:o.exp}}catch(o){throw console.error("Token inv\xE1lido:",o),new Error("Token inv\xE1lido.")}}}}var j=X;var x=A.default.Router(),{verifyToken:Z}=j();x.get("/",async(t,e)=>{let o=t.headers.authorization;if(!o){e.status(401).json({success:!1,error:"Token n\xE3o fornecido."});return}try{let s=o.split("Bearer ")[1],r=await Z(s);e.status(200).json({success:!0,user:r})}catch(s){console.error("Token inv\xE1lido:",s),e.status(401).json({success:!1,error:"Token inv\xE1lido ou expirado."});return}});var O=x;var B=m(require("express"));var d=m(require("mongoose"));var I=m(require("mongoose")),ee=async(t,e)=>{try{I.default.connection.readyState===0&&(await I.default.connect(t,{dbName:e}),console.log("Conectado ao MongoDB"))}catch(o){throw console.error("Erro ao se conectar ao banco de dados:",o),new Error("Falha ao se conectar ao banco de dados")}},M=ee;async function oe(t,e,o){let s=process.env.MONGODB_URL_PRODUCTION;await M(s,t);let r=a=>d.default.models[e]?d.default.models[e]:d.default.model(e,new d.Schema(a),o||e),i=a=>d.default.Types.ObjectId.isValid(a)?new d.default.Types.ObjectId(a):null,n=async(a,c,l)=>{try{return d.default.models[a]||d.default.model(a,new d.Schema(c),l)}catch(u){throw console.error("Erro ao validar o modelo",u.message),new Error("Falha ao validar o modelo")}};return{createDocument:async(a,c)=>{try{let l=r(a);return{success:!0,data:await new l(c).save()}}catch(l){throw console.error("Erro ao criar documento:",l.message),new Error("Algum erro ocorreu ao tentar adicionar.")}},deleteDocument:async a=>{try{let c=i(a);return c?await(await n(e,void 0,o)).findByIdAndDelete(c)?{success:!0,message:"Documento deletado com sucesso"}:{success:!1,message:"Documento n\xE3o encontrado."}:{success:!1,message:"ID inv\xE1lido."}}catch(c){throw console.error("Erro ao excluir documento:",c),new Error("Falha ao excluir documento")}},updateDocumentById:async(a,c,l)=>{try{let u=i(c);if(!u)return{success:!1,message:"ID inv\xE1lido."};let v=await(await n(e,a,o)).findByIdAndUpdate(u,l,{new:!0,runValidators:!0});return v?{success:!0,message:"Documento atualizado com sucesso.",data:v}:{success:!1,message:"Documento n\xE3o encontrado."}}catch(u){throw console.error("Erro ao atualizar o documento:",u.message),new Error("Falha ao atualizar documento")}},getAllDocuments:async()=>{try{return{success:!0,data:await(await n(e,void 0,o)).find()}}catch(a){throw console.error("Erro ao listar todos os documentos:",a.message),new Error("Falha ao listar todos os documentos")}},getDocumentById:async a=>{try{let c=i(a);if(!c)return{success:!1,message:"ID inv\xE1lido."};let u=await(await n(e,void 0,o)).findById(c);return u?{success:!0,data:u}:{success:!1,message:"Documento n\xE3o encontrado."}}catch(c){throw console.error("Erro ao listar o documento:",c.message),new Error("Falha ao listar o documento")}},Model:r}}var f=oe;var R=B.default.Router();R.post("/",async(t,e)=>{let{collectionName:o,schema:s,dbName:r,data:i,nameModel:n}=t.body;if(!s||!i||!r||!n){e.status(400).json({success:!1,error:"Par\xE2metros inv\xE1lidos. Envie schema, data, dbName, nameModel e collectionName (OPCIONAL)."});return}let{createDocument:p}=await f(r,n,o);try{let D=await p(s,i);e.status(201).json(D)}catch{e.status(500).json({success:!1,error:"Ocorreu algum erro interno. Tente novamente mais tarde."});return}});var S=R;var F=m(require("express"));var b=F.default.Router();b.get("/all",async(t,e)=>{let{collectionName:o,dbName:s,nameModel:r}=t.query;if(!s||!r){e.status(400).json({success:!1,error:"Algumas dessas informa\xE7\xF5es n\xE3o foram fornecidas: dbName, nameModel, collectionName (OPCIONAL)."});return}let{getAllDocuments:i}=f(s,r,o);try{let n=await i();e.status(200).json(n)}catch{e.status(500).json({success:!1,error:"Ocorreu algum erro interno. Tente novamente mais tarde."});return}});b.get("/",async(t,e)=>{let{collectionName:o,dbName:s,id:r}=t.query,{getDocumentById:i}=await f(s,s,o);if(!s||!o||!r){e.status(400).json({success:!1,error:"Algumas dessas informa\xE7\xF5es n\xE3o foram fornecidas: dbName, collectionName, id"});return}try{let n=await i(r);e.status(200).json(n)}catch{e.status(500).json({success:!1,error:"Ocorreu algum erro interno. Tente novamente mais tarde."});return}});var P=b;var k=m(require("express"));var _=k.default.Router();_.delete("/",async(t,e)=>{let{collectionName:o,dbName:s,id:r,nameModel:i}=t.query;if(!r||!o||!o||!s){e.status(400).json({success:!1,error:"Algumas dessas informa\xE7\xF5es n\xE3o foram fornecidas: id, nameModel, collectionName, dbName."});return}let{deleteDocument:n}=await f(s,i,o);try{let p=await n(r);e.status(200).json(p)}catch{e.status(500).json({success:!1,error:"Ocorreu algum erro interno. Tente novamente mais tarde."});return}});var G=_;var L=m(require("express"));var C=L.default.Router();C.put("/",async(t,e)=>{let o=t.query,{dbName:s,nameModel:r,schema:i,collectionName:n,data:p}=t.body;if(!s||!r||!i||!n||!p){e.status(400).json({success:!1,error:"Algumas dessas informa\xE7\xF5es n\xE3o foram fornecidas: dbName, nameModel, schema, collectionName, data"});return}let{updateDocumentById:D}=await f(s,r,n);try{let w=await D(i,o.id,p);e.status(200).json(w)}catch{e.status(500).json({success:!1,error:"Ocorreu algum erro interno. Tente novamente mais tarde."});return}});var U=C;var y=q.default.Router();y.get("/",(t,e)=>{e.send("API Sequoia")});y.use("/api/verify-token",O);y.use("/api/mongodb/add",S);y.use("/api/mongodb/get",P);y.use("/api/mongodb/delete",G);y.use("/api/mongodb/update",U);var z=y;var h=(0,E.default)();h.use((0,V.default)({origin:process.env.ALLOWED_ORIGINS,credentials:!0,methods:["GET","POST","PUT","DELETE","OPTIONS"],allowedHeaders:["Content-Type","Authorization"]}));h.use(E.default.json());T();h.use("/",z);h.listen(process.env.PORT,()=>{console.log(`API rodando na porta ${process.env.PORT}`)});
