"use strict";var H=Object.create;var O=Object.defineProperty;var $=Object.getOwnPropertyDescriptor;var J=Object.getOwnPropertyNames;var K=Object.getPrototypeOf,W=Object.prototype.hasOwnProperty;var Y=(r,e,o,n)=>{if(e&&typeof e=="object"||typeof e=="function")for(let t of J(e))!W.call(r,t)&&t!==o&&O(r,t,{get:()=>e[t],enumerable:!(n=$(e,t))||n.enumerable});return r};var u=(r,e,o)=>(o=r!=null?H(K(r)):{},Y(e||!r||!r.__esModule?O(o,"default",{value:r,enumerable:!0}):o,r));var w=u(require("express")),G=u(require("cors"));var f=u(require("firebase-admin")),M=()=>{f.apps.length===0&&f.initializeApp({credential:f.credential.cert({clientEmail:process.env.FIREBASE_CLIENT_EMAIL,privateKey:process.env.FIREBASE_PRIVATE_KEY?.replace(/\\n/g,`
`),projectId:process.env.FIREBASE_PROJECT_ID})})};var Be=require("dotenv/config");var V=u(require("express"));var _=u(require("express"));function Q(){return{verifyToken:async e=>{try{let o=await f.auth().verifyIdToken(e);return{uid:o.uid,email:o.email,iat:o.iat,exp:o.exp}}catch(o){throw console.error("Token inv\xE1lido:",o),new Error("Token inv\xE1lido.")}}}}var R=Q;var A=_.default.Router(),{verifyToken:X}=R();A.get("/",async(r,e)=>{let o=r.headers.authorization;if(!o){e.status(401).json({success:!1,error:"Token n\xE3o fornecido."});return}try{let n=o.split("Bearer ")[1],t=await X(n);e.status(200).json({success:!0,user:t})}catch(n){console.error("Token inv\xE1lido:",n),e.status(401).json({success:!1,error:"Token inv\xE1lido ou expirado."});return}});var b=A;var x=u(require("express"));var D=u(require("mongoose"));var g=u(require("mongoose")),Z=async(r,e)=>{try{g.default.connection.readyState===0?(console.log("Conectando ao MongoDB..."),await g.default.connect(r,{dbName:e}),console.log(`Conectado ao MongoDB na base de dados "${e}"`)):g.default.connection.readyState===1?console.log("J\xE1 conectado ao MongoDB"):g.default.connection.readyState===2?console.log("Conex\xE3o com MongoDB est\xE1 em progresso..."):g.default.connection.readyState===3&&console.log("Desconectando do MongoDB...")}catch(o){throw console.error("Erro ao se conectar ao banco de dados:",o),new Error("Falha ao se conectar ao banco de dados")}},v=Z;var i={INVALID_ID:"ID inv\xE1lido.",DOCUMENT_NOT_FOUND:"Documento n\xE3o encontrado.",CREATE_ERROR:"Erro ao criar documento.",UPDATE_ERROR:"Erro ao atualizar documento.",DELETE_ERROR:"Erro ao excluir documento.",LIST_ERROR:"Erro ao listar documentos."};async function ee(r,e,o){let n=process.env.MONGODB_URL;if(!n)throw new Error("Vari\xE1vel de ambiente MONGODB_URL n\xE3o encontrada.");await v(n,r);let t=async c=>{try{return D.default.models[e]||D.default.model(e,new D.Schema(c),o)}catch(d){throw console.error("Erro ao validar o modelo",d.message),new Error("Falha ao validar o modelo")}},s=c=>D.default.Types.ObjectId.isValid(c),a=(c,d)=>{throw console.error(`Erro ao executar opera\xE7\xE3o: ${c}`,d.message),new Error(c)};return{createDocument:async(c,d)=>{try{let m=await t(c);return{success:!0,data:await new m(d).save()}}catch(m){return a(i.CREATE_ERROR,m),{success:!1,error:i.CREATE_ERROR}}},getAllDocument:async()=>{try{return{success:!0,data:await(await t()).find()}}catch(c){return a(i.LIST_ERROR,c),{success:!1,error:i.LIST_ERROR}}},getDocumentById:async c=>{if(!s(c))throw new Error(i.INVALID_ID);try{let m=await(await t()).findById(c);if(!m)throw new Error(i.DOCUMENT_NOT_FOUND);return{success:!0,data:m}}catch(d){return a(i.DOCUMENT_NOT_FOUND,d),{success:!1,error:i.DOCUMENT_NOT_FOUND}}},updateDocumentById:async(c,d)=>{if(!s(c))throw new Error(i.INVALID_ID);try{let h=await(await t()).findByIdAndUpdate(c,d,{new:!0});if(!h)throw new Error(i.DOCUMENT_NOT_FOUND);return{success:!0,data:h}}catch(m){return a(i.UPDATE_ERROR,m),{success:!1,error:i.UPDATE_ERROR}}},deleteDocumentById:async c=>{if(!s(c))throw new Error(i.INVALID_ID);try{let m=await(await t()).findByIdAndDelete(c);if(!m)throw new Error(i.DOCUMENT_NOT_FOUND);return{success:!0,data:m}}catch(d){return a(i.DELETE_ERROR,d),{success:!1,error:i.DELETE_ERROR}}}}}var p=ee;var B=x.default.Router();B.post("/",async(r,e)=>{let{collectionName:o,schema:n,dbName:t,data:s,nameModel:a}=r.body;if(!n||!s||!t||!a){e.status(400).json({success:!1,error:"Par\xE2metros inv\xE1lidos. Envie schema, data, dbName, nameModel, collectionName (OPCIONAL)"});return}try{let{createDocument:l}=await p(t,a,o),I=await l(n,s);e.status(200).json(I)}catch(l){console.error(l),e.status(500).json({success:!1,error:"Erro ao adicionar documento."})}});var j=B;var U=u(require("express"));var T=U.default.Router();T.get("/all",async(r,e)=>{let{collectionName:o,dbName:n,nameModel:t}=r.query;if(!n||!t||!o){e.status(400).json({success:!1,error:"Algumas dessas informa\xE7\xF5es n\xE3o foram fornecidas: dbName, nameModel e collectionName."});return}try{let{getAllDocument:s}=await p(n,t,o),a=await s();e.json(a)}catch(s){e.status(500).json({success:!1,error:s.message})}});T.get("/",async(r,e)=>{let{collectionName:o,dbName:n,id:t,nameModel:s}=r.query;if(!n||!t||!o||!s){e.status(400).json({success:!1,error:"Algumas dessas informa\xE7\xF5es n\xE3o foram fornecidas: dbName, id, nameModel e collectionName."});return}try{let{getDocumentById:a}=await p(n,s,o),l=await a(t);e.json(l)}catch(a){e.status(500).json({success:!1,error:a.message})}});var S=T;var L=u(require("express"));var k=L.default.Router();k.delete("/",async(r,e)=>{let{collectionName:o,dbName:n,id:t,nameModel:s}=r.query;if(!t||!o||!o||!n){e.status(400).json({success:!1,error:"Algumas dessas informa\xE7\xF5es n\xE3o foram fornecidas: id, nameModel, collectionName, dbName."});return}try{let{deleteDocumentById:a}=await p(n,s,o),l=await a(t);e.status(200).json(l)}catch(a){e.status(500).json({success:!1,error:a.message})}});var C=k;var F=u(require("express")),P=F.default.Router();P.put("/",async(r,e)=>{let o=r.query,{dbName:n,nameModel:t,schema:s,collectionName:a,data:l}=r.body;if(!n||!t||!s||!a||!l){e.status(400).json({success:!1,error:"Algumas dessas informa\xE7\xF5es n\xE3o foram fornecidas: dbName, nameModel, schema, collectionName, data"});return}});var q=P;var y=async(r,e,o)=>{let t=r.headers.authorization?.split(" ")[1];if(!t){e.status(401).json({success:!1,error:"Token n\xE3o fornecido"});return}try{let{verifyToken:s}=R();await s(t),o()}catch(s){console.error(s),e.status(401).json({valid:!1,error:"Token inv\xE1lido ou expirado"});return}};var E=V.default.Router();E.get("/",async(r,e)=>{e.send("API Sequoia")});E.use("/api/verify-token",b);E.use("/api/mongodb/add",y,j);E.use("/api/mongodb/get",y,S);E.use("/api/mongodb/delete",y,C);E.use("/api/mongodb/update",y,q);var z=E;var N=(0,w.default)();N.use((0,G.default)({origin:process.env.ALLOWED_ORIGINS,credentials:!0,methods:["GET","POST","PUT","DELETE","OPTIONS"],allowedHeaders:["Content-Type","Authorization"]}));N.use(w.default.json());M();N.use("/",z);N.listen(process.env.PORT,()=>{console.log(`API rodando na porta ${process.env.PORT}`)});
