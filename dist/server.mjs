import k from"express";import W from"cors";import*as f from"firebase-admin";var b=()=>{f.apps.length===0&&f.initializeApp({credential:f.credential.cert({clientEmail:process.env.FIREBASE_CLIENT_EMAIL,privateKey:process.env.FIREBASE_PRIVATE_KEY?.replace(/\\n/g,`
`),projectId:process.env.FIREBASE_PROJECT_ID})})};import"dotenv/config";import J from"express";import L from"express";function G(){return{verifyToken:async e=>{try{let o=await f.auth().verifyIdToken(e);return{uid:o.uid,email:o.email,iat:o.iat,exp:o.exp}}catch(o){throw console.error("Token inv\xE1lido:",o),new Error("Token inv\xE1lido.")}}}}var E=G;var v=L.Router(),{verifyToken:C}=E();v.get("/",async(s,e)=>{let o=s.headers.authorization;if(!o){e.status(401).json({success:!1,error:"Token n\xE3o fornecido."});return}try{let t=o.split("Bearer ")[1],r=await C(t);e.status(200).json({success:!0,user:r})}catch(t){console.error("Token inv\xE1lido:",t),e.status(401).json({success:!1,error:"Token inv\xE1lido ou expirado."});return}});var N=v;import z from"express";import p,{Schema as A}from"mongoose";import T from"mongoose";var U=async(s,e)=>{try{T.connection.readyState===0&&(await T.connect(s,{dbName:e}),console.log("Conectado ao MongoDB"))}catch(o){throw console.error("Erro ao se conectar ao banco de dados:",o),new Error("Falha ao se conectar ao banco de dados")}},j=U;async function q(s,e,o){let t=process.env.MONGODB_URL_PRODUCTION;await j(t,s);let r=a=>p.models[e]?p.models[e]:p.model(e,new A(a),o||e),i=a=>p.Types.ObjectId.isValid(a)?new p.Types.ObjectId(a):null,n=async(a,c,m)=>{try{return p.models[a]||p.model(a,new A(c),m)}catch(u){throw console.error("Erro ao validar o modelo",u.message),new Error("Falha ao validar o modelo")}};return{createDocument:async(a,c)=>{try{let m=r(a);return{success:!0,data:await new m(c).save()}}catch(m){throw console.error("Erro ao criar documento:",m.message),new Error("Algum erro ocorreu ao tentar adicionar.")}},deleteDocument:async a=>{try{let c=i(a);return c?await(await n(e,void 0,o)).findByIdAndDelete(c)?{success:!0,message:"Documento deletado com sucesso"}:{success:!1,message:"Documento n\xE3o encontrado."}:{success:!1,message:"ID inv\xE1lido."}}catch(c){throw console.error("Erro ao excluir documento:",c),new Error("Falha ao excluir documento")}},updateDocumentById:async(a,c,m)=>{try{let u=i(c);if(!u)return{success:!1,message:"ID inv\xE1lido."};let I=await(await n(e,a,o)).findByIdAndUpdate(u,m,{new:!0,runValidators:!0});return I?{success:!0,message:"Documento atualizado com sucesso.",data:I}:{success:!1,message:"Documento n\xE3o encontrado."}}catch(u){throw console.error("Erro ao atualizar o documento:",u.message),new Error("Falha ao atualizar documento")}},getAllDocuments:async()=>{try{return{success:!0,data:await(await n(e,void 0,o)).find()}}catch(a){throw console.error("Erro ao listar todos os documentos:",a.message),new Error("Falha ao listar todos os documentos")}},getDocumentById:async a=>{try{let c=i(a);if(!c)return{success:!1,message:"ID inv\xE1lido."};let u=await(await n(e,void 0,o)).findById(c);return u?{success:!0,data:u}:{success:!1,message:"Documento n\xE3o encontrado."}}catch(c){throw console.error("Erro ao listar o documento:",c.message),new Error("Falha ao listar o documento")}},Model:r}}var d=q;var x=z.Router();x.post("/",async(s,e)=>{let{collectionName:o,schema:t,dbName:r,data:i,nameModel:n}=s.body;if(!t||!i||!r||!n){e.status(400).json({success:!1,error:"Par\xE2metros inv\xE1lidos. Envie schema, data, dbName, nameModel e collectionName (OPCIONAL)."});return}let{createDocument:l}=await d(r,n,o);try{let y=await l(t,i);e.status(201).json(y)}catch{e.status(500).json({success:!1,error:"Ocorreu algum erro interno. Tente novamente mais tarde."});return}});var O=x;import V from"express";var w=V.Router();w.get("/all",async(s,e)=>{let{collectionName:o,dbName:t,nameModel:r}=s.query;if(!t||!r){e.status(400).json({success:!1,error:"Algumas dessas informa\xE7\xF5es n\xE3o foram fornecidas: dbName, nameModel, collectionName (OPCIONAL)."});return}let{getAllDocuments:i}=d(t,r,o);try{let n=await i();e.status(200).json(n)}catch{e.status(500).json({success:!1,error:"Ocorreu algum erro interno. Tente novamente mais tarde."});return}});w.get("/",async(s,e)=>{let{collectionName:o,dbName:t,id:r}=s.query,{getDocumentById:i}=await d(t,t,o);if(!t||!o||!r){e.status(400).json({success:!1,error:"Algumas dessas informa\xE7\xF5es n\xE3o foram fornecidas: dbName, collectionName, id"});return}try{let n=await i(r);e.status(200).json(n)}catch{e.status(500).json({success:!1,error:"Ocorreu algum erro interno. Tente novamente mais tarde."});return}});var M=w;import H from"express";var B=H.Router();B.delete("/",async(s,e)=>{let{collectionName:o,dbName:t,id:r,nameModel:i}=s.query;if(!r||!o||!o||!t){e.status(400).json({success:!1,error:"Algumas dessas informa\xE7\xF5es n\xE3o foram fornecidas: id, nameModel, collectionName, dbName."});return}let{deleteDocument:n}=await d(t,i,o);try{let l=await n(r);e.status(200).json(l)}catch{e.status(500).json({success:!1,error:"Ocorreu algum erro interno. Tente novamente mais tarde."});return}});var R=B;import K from"express";var S=K.Router();S.put("/",async(s,e)=>{let o=s.query,{dbName:t,nameModel:r,schema:i,collectionName:n,data:l}=s.body;if(!t||!r||!i||!n||!l){e.status(400).json({success:!1,error:"Algumas dessas informa\xE7\xF5es n\xE3o foram fornecidas: dbName, nameModel, schema, collectionName, data"});return}let{updateDocumentById:y}=await d(t,r,n);try{let h=await y(i,o.id,l);e.status(200).json(h)}catch{e.status(500).json({success:!1,error:"Ocorreu algum erro interno. Tente novamente mais tarde."});return}});var F=S;var g=J.Router();g.get("/",(s,e)=>{e.send("API Sequoia")});g.use("/api/verify-token",N);g.use("/api/mongodb/add",O);g.use("/api/mongodb/get",M);g.use("/api/mongodb/delete",R);g.use("/api/mongodb/update",F);var P=g;var D=k();D.use(W({origin:process.env.ALLOWED_ORIGINS,credentials:!0,methods:["GET","POST","PUT","DELETE","OPTIONS"],allowedHeaders:["Content-Type","Authorization"]}));D.use(k.json());b();D.use("/",P);D.listen(process.env.PORT,()=>{console.log(`API rodando na porta ${process.env.PORT}`)});
