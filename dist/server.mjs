import k from"express";import W from"cors";import*as l from"firebase-admin";var b=()=>{l.apps.length===0&&l.initializeApp({credential:l.credential.cert({clientEmail:process.env.FIREBASE_CLIENT_EMAIL,privateKey:process.env.FIREBASE_PRIVATE_KEY?.replace(/\\n/g,`
`),projectId:process.env.FIREBASE_PROJECT_ID})})};import"dotenv/config";import J from"express";import C from"express";function _(){return{verifyToken:async e=>{try{let o=await l.auth().verifyIdToken(e);return{uid:o.uid,email:o.email,iat:o.iat,exp:o.exp}}catch(o){throw console.error("Token inv\xE1lido:",o),new Error("Token inv\xE1lido.")}}}}var E=_;var N=C.Router(),{verifyToken:G}=E();N.get("/",async(r,e)=>{let o=r.headers.authorization;if(!o){e.status(401).json({success:!1,error:"Token n\xE3o fornecido."});return}try{let t=o.split("Bearer ")[1],s=await G(t);e.status(200).json({success:!0,user:s})}catch(t){console.error("Token inv\xE1lido:",t),e.status(401).json({success:!1,error:"Token inv\xE1lido ou expirado."});return}});var v=N;import q from"express";import p,{Schema as j}from"mongoose";import T from"mongoose";var U=async(r,e)=>{try{T.connection.readyState===0&&(await T.connect(r,{dbName:e}),console.log("Conectado ao MongoDB"))}catch(o){throw console.error("Erro ao se conectar ao banco de dados:",o),new Error("Falha ao se conectar ao banco de dados")}},A=U;async function z(r,e,o){let t=process.env.MONGODB_URL_PRODUCTION;await A(t,r);let s=i=>p.models[e]?p.models[e]:p.model(e,new j(i),o),a=i=>p.Types.ObjectId.isValid(i)?new p.Types.ObjectId(i):null,c=async i=>{try{return p.models[e]||p.model(e,new j(i),o)}catch(n){throw console.error("Erro ao validar o modelo",n.message),new Error("Falha ao validar o modelo")}};return{createDocument:async(i,n)=>{try{let f=s(i);return{success:!0,data:await new f(n).save()}}catch(f){throw console.error("Erro ao criar documento:",f.message),new Error("Algum erro ocorreu ao tentar adicionar.")}},deleteDocument:async i=>{try{let n=a(i);return n?await(await c()).findByIdAndDelete(n)?{success:!0,message:"Documento deletado com sucesso"}:{success:!1,message:"Documento n\xE3o encontrado."}:{success:!1,message:"ID inv\xE1lido."}}catch(n){throw console.error("Erro ao excluir documento:",n),new Error("Falha ao excluir documento")}},updateDocumentById:async(i,n,f)=>{try{let m=a(n);if(!m)return{success:!1,message:"ID inv\xE1lido."};let I=await(await c(i)).findByIdAndUpdate(m,f,{new:!0,runValidators:!0});return I?{success:!0,message:"Documento atualizado com sucesso.",data:I}:{success:!1,message:"Documento n\xE3o encontrado."}}catch(m){throw console.error("Erro ao atualizar o documento:",m.message),new Error("Falha ao atualizar documento")}},getAllDocuments:async()=>{try{return{success:!0,data:await(await c()).find()}}catch(i){throw console.error("Erro ao listar todos os documentos:",i.message),new Error("Falha ao listar todos os documentos")}},getDocumentById:async i=>{try{let n=a(i);if(!n)return{success:!1,message:"ID inv\xE1lido."};let m=await(await c()).findById(n);return m?{success:!0,data:m}:{success:!1,message:"Documento n\xE3o encontrado."}}catch(n){throw console.error("Erro ao listar o documento:",n.message),new Error("Falha ao listar o documento")}},Model:s}}var d=z;var O=q.Router();O.post("/",async(r,e)=>{let{collectionName:o,schema:t,dbName:s,data:a,nameModel:c}=r.body;if(console.log(r.body),!t||!a||!s||!c){e.status(400).json({success:!1,error:"Par\xE2metros inv\xE1lidos. Envie schema, data, dbName, nameModel e collectionName (OPCIONAL)."});return}try{let{createDocument:u}=await d(s,c,o),y=await u(t,a);e.status(201).json(y)}catch{e.status(500).json({success:!1,error:"Ocorreu algum erro interno. Tente novamente mais tarde."});return}});var x=O;import V from"express";var h=V.Router();h.get("/all",async(r,e)=>{let{collectionName:o,dbName:t,nameModel:s}=r.query;if(!t||!s){e.status(400).json({success:!1,error:"Algumas dessas informa\xE7\xF5es n\xE3o foram fornecidas: dbName, nameModel, collectionName (OPCIONAL)."});return}try{let{getAllDocuments:a}=await d(t,s,o),c=await a();e.status(200).json(c)}catch{e.status(500).json({success:!1,error:"Ocorreu algum erro interno. Tente novamente mais tarde."});return}});h.get("/",async(r,e)=>{let{collectionName:o,dbName:t,id:s}=r.query;if(!t||!s){e.status(400).json({success:!1,error:"Algumas dessas informa\xE7\xF5es n\xE3o foram fornecidas: dbName, id, collectionName (OPCIONAL)"});return}try{let{getDocumentById:a}=await d(t,t,o),c=await a(s);e.status(200).json(c)}catch{e.status(500).json({success:!1,error:"Ocorreu algum erro interno. Tente novamente mais tarde."});return}});var M=h;import H from"express";var B=H.Router();B.delete("/",async(r,e)=>{let{collectionName:o,dbName:t,id:s,nameModel:a}=r.query;if(!s||!o||!o||!t){e.status(400).json({success:!1,error:"Algumas dessas informa\xE7\xF5es n\xE3o foram fornecidas: id, nameModel, collectionName, dbName."});return}try{let{deleteDocument:c}=await d(t,a,o),u=await c(s);e.status(200).json(u)}catch{e.status(500).json({success:!1,error:"Ocorreu algum erro interno. Tente novamente mais tarde."});return}});var R=B;import K from"express";var S=K.Router();S.put("/",async(r,e)=>{let o=r.query,{dbName:t,nameModel:s,schema:a,collectionName:c,data:u}=r.body;if(!t||!s||!a||!c||!u){e.status(400).json({success:!1,error:"Algumas dessas informa\xE7\xF5es n\xE3o foram fornecidas: dbName, nameModel, schema, collectionName, data"});return}try{let{updateDocumentById:y}=await d(t,s,c),w=await y(a,o.id,u);e.status(200).json(w)}catch{e.status(500).json({success:!1,error:"Ocorreu algum erro interno. Tente novamente mais tarde."});return}});var P=S;var g=J.Router();g.get("/",(r,e)=>{e.send("API Sequoia")});g.use("/api/verify-token",v);g.use("/api/mongodb/add",x);g.use("/api/mongodb/get",M);g.use("/api/mongodb/delete",R);g.use("/api/mongodb/update",P);var F=g;var D=k();D.use(W({origin:process.env.ALLOWED_ORIGINS,credentials:!0,methods:["GET","POST","PUT","DELETE","OPTIONS"],allowedHeaders:["Content-Type","Authorization"]}));D.use(k.json());b();D.use("/",F);D.listen(process.env.PORT,()=>{console.log(`API rodando na porta ${process.env.PORT}`)});
